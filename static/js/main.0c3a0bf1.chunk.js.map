{"version":3,"sources":["components/Cell.js","components/Board.js","components/Timer.js","components/OneToFifty.js","App.js","index.js"],"names":["Cell","_ref","num","handleClick","react_default","a","createElement","Container","onClick","styled","div","_templateObject","Object","taggedTemplateLiteral","Board","numbers","Board_Container","map","index","key","Board_templateObject","Timer","_useState","useState","_useState2","slicedToArray","timeElapsed","setTimeElapsed","record","useRef","current","useEffect","timer","setInterval","alert","clearInterval","Timer_Container","Front","Math","floor","Back","Timer_templateObject","_templateObject2","_templateObject3","array","i","push","OneToFifty","setNumbers","_useState3","_useState4","gameFlag","setGameFlag","_useState5","_useState6","setCurrent","endGame","OneToFifty_Container","console","log","indexOf","concat","toConsumableArray","slice","StartButton","className","shuffleArray","length","j","random","OneToFifty_templateObject","button","OneToFifty_templateObject2","App","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.0c3a0bf1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function Cell({ num, handleClick }) {\r\n  return (\r\n    <Container onClick={() => handleClick(num)}>\r\n      {num !== 0 ? num : null}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  border: 1px solid white;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 30px;\r\n  color: white;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Cell from \"./Cell\";\r\n\r\nexport default function Board({ numbers, handleClick }) {\r\n  return (\r\n    <Container>\r\n      {numbers.map((num, index) => (\r\n        <Cell num={num} key={index} handleClick={handleClick}></Cell>\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: 400px;\r\n  height: 400px;\r\n  border: 1px solid blue;\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-template-rows: repeat(5, 1fr);\r\n`;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function Timer() {\r\n  const [timeElapsed, setTimeElapsed] = useState(0);\r\n  const record = useRef();\r\n  record.current = timeElapsed;\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeElapsed(timeElapsed => timeElapsed + 30);\r\n    }, 30);\r\n    return () => {\r\n      alert(\"Your Record :\" + record.current / 1000);\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <Front>{Math.floor(timeElapsed / 1000)}:</Front>\r\n      <Back>{(timeElapsed % 1000) / 10}</Back>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-top: 30px;\r\n  width: 100px;\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 30px;\r\n  color: white;\r\n`;\r\n\r\nconst Front = styled.div`\r\n  text-align: right;\r\n`;\r\n\r\nconst Back = styled.div`\r\n  width: 1em;\r\n`;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Board from \"./Board\";\r\nimport Timer from \"./Timer\";\r\nimport 'C:/Users/SW2147/Desktop/웹프로젝트/개인프로젝트/speedgame/src/App.css';\r\n\r\nlet array = [];\r\nfor (let i = 1; i <= 25; i++) {\r\n  array.push(i);\r\n}\r\n\r\nexport default function OneToFifty() {\r\n  const [numbers, setNumbers] = useState(array);\r\n  const [gameFlag, setGameFlag] = useState(false);\r\n  const [current, setCurrent] = useState(1);\r\n  const handleClick = num => {\r\n    if (num === current && gameFlag) {\r\n      if (num === 50) {\r\n        console.log(\"Success\");\r\n        endGame();\r\n      }\r\n      const index = numbers.indexOf(num);\r\n      setNumbers(numbers => [\r\n        ...numbers.slice(0, index),\r\n        num < 26 ? num + 25 : 0,\r\n        ...numbers.slice(index + 1)\r\n      ]);\r\n      setCurrent(current => current + 1);\r\n    }\r\n  };\r\n  const startGame = () => {\r\n    setNumbers(shuffleArray(array));\r\n    setCurrent(1);\r\n    setGameFlag(true);\r\n  };\r\n  const endGame = () => {\r\n    setGameFlag(false);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Board numbers={numbers} handleClick={handleClick}></Board>\r\n      {gameFlag ? (\r\n        <Timer />\r\n      ) : (\r\n        <StartButton className=\"w-btn-neon2\" onClick={startGame}>start</StartButton>\r\n      )}\r\n      <br></br>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst shuffleArray = array => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n};\r\n\r\nconst Container = styled.div`\r\n  width: 600px;\r\n  height: 800px;\r\n  border: 1px solid white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst StartButton = styled.button`\r\n  margin-top: 30px;\r\n  width: 100px;\r\n  height: 50px;\r\n`;","import React from \"react\";\nimport OneToFifty from \"./components/OneToFifty\";\n\n\nexport default function App() {\n  return (\n    <OneToFifty></OneToFifty>\n  );\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}